name: CI Pipeline

on:
  push:
    branches:
      - main

jobs:
  unit-tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    outputs:
      unit_result: ${{ steps.unit_test.outcome }}
    steps:
      - 
        uses: actions/checkout@v4

      - 
        name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - 
        name: Install dependencies
        run: npm ci

      - 
        name: Run Unit Tests
        id: unit_test
        run: npm run test:unit

  integration-tests:
    name: Run Integration Tests
    runs-on: ubuntu-latest
    outputs:
      integration_result: ${{ steps.integration_test.outcome }}
    steps:
      - 
        uses: actions/checkout@v4

      - 
        name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - 
        name: Install dependencies
        run: npm ci

      - 
        name: Run Integration Tests
        id: integration_test
        run: npm run test:integration

  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [unit-tests, integration-tests]
    if: ${{ needs.unit-tests.result == 'success' && needs.integration-tests.result == 'success' }}
    steps:
      - 
        uses: actions/checkout@v4

      - 
        name: Login to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ vars.JRLMGITOPSACR_LOGIN_SERVER }}
          username: ${{ secrets.JRLMGITOPSACR_USERNAME }}
          password: ${{ secrets.JRLMGITOPSACR_PASSWORD }}

      - 
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - 
        name: Push to ACR
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/arm64
          tags: |
            ${{ vars.JRLMGITOPSACR_LOGIN_SERVER }}/backend:${{ github.sha }}